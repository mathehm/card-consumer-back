openapi: 3.0.3
info:
  title: API Card Consumer
  version: '2.0'
  description: API para gerenciamento de carteiras digitais com sistema de produtos e vendas
servers:
  - url: https://api.server.test/v1
paths:
  # === WALLET ROUTES ===
  /wallet/register:
    post:
      tags:
        - Wallet
      summary: Registrar uma nova carteira
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: number
                  example: 12345
                balance:
                  type: number
                  example: 100.50
                user:
                  type: object
                  properties:
                    name:
                      type: string
                      example: 'João Silva'
                    phone:
                      type: string
                      example: '(11) 99999-9999'
              required:
                - code
                - user
      responses:
        '201':
          description: Criado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Carteira criada com sucesso'

  /wallet:
    get:
      tags:
        - Wallet
      summary: Listar carteiras com paginação, busca e ordenação
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Número da página
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
          description: Itens por página
        - in: query
          name: search
          schema:
            type: string
          description: Buscar por código, nome do usuário ou telefone
        - in: query
          name: sortBy
          schema:
            type: string
            enum:
              - balance_asc
              - balance_desc
              - totalCredit_asc
              - totalCredit_desc
              - createdAt_asc
              - createdAt_desc
              - userName_asc
              - userName_desc
              - code_asc
              - code_desc
            default: createdAt_desc
          description: Campo e direção da ordenação
        - in: query
          name: status
          schema:
            type: string
            enum:
              - all
              - winner
              - eligible
              - ineligible
            default: all
          description: Filtrar por status do sorteio
      responses:
        '200':
          description: Lista de carteiras
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 'abc123'
                        code:
                          type: number
                          example: 12345
                        balance:
                          type: number
                          example: 150.75
                        totalCredit:
                          type: number
                          example: 200.00
                        alreadyWinner:
                          type: boolean
                          example: false
                        winnerMarkedAt:
                          type: string
                          format: date-time
                          nullable: true
                        createdAt:
                          type: string
                          format: date-time
                        lotteryStatus:
                          type: string
                          enum: [winner, eligible, ineligible]
                          example: eligible
                        user:
                          type: object
                          properties:
                            name:
                              type: string
                              example: 'João Silva'
                            phone:
                              type: string
                              example: '(11) 99999-9999'
                  pagination:
                    type: object
                    properties:
                      page:
                        type: integer
                        example: 1
                      limit:
                        type: integer
                        example: 10
                      total:
                        type: integer
                        example: 25
                      totalPages:
                        type: integer
                        example: 3
                      hasNext:
                        type: boolean
                        example: true
                      hasPrev:
                        type: boolean
                        example: false
                  filters:
                    type: object
                    properties:
                      search:
                        type: string
                        example: 'João'
                      sortBy:
                        type: string
                        example: 'createdAt_desc'
                      status:
                        type: string
                        example: 'all'
                  fromCache:
                    type: boolean
                    example: false

  /wallet/{code}/credit:
    post:
      tags:
        - Wallet
      summary: Adicionar crédito na carteira
      parameters:
        - in: path
          name: code
          schema:
            type: number
          required: true
          description: Código da carteira
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                value:
                  type: number
                  example: 100.50
              required:
                - value
      responses:
        '202':
          description: Crédito adicionado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Crédito adicionado com sucesso'

  /wallet/{code}/debit:
    post:
      tags:
        - Wallet
      summary: Realizar débito na carteira (com produtos ou valor simples)
      parameters:
        - in: path
          name: code
          schema:
            type: number
          required: true
          description: Código da carteira
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    items:
                      type: array
                      description: Lista de produtos para débito
                      items:
                        type: object
                        properties:
                          productId:
                            type: string
                            example: "abc123def456"
                          quantity:
                            type: number
                            example: 2
                        required:
                          - productId
                          - quantity
                  required:
                    - items
                  example:
                    items:
                      - productId: "abc123def456"
                        quantity: 2
                      - productId: "def789ghi012"
                        quantity: 1
                - type: object
                  properties:
                    value:
                      type: number
                      description: Valor para débito do sistema (quando não há produtos)
                      example: 10.50
                  required:
                    - value
                  example:
                    value: 10.50
      responses:
        '202':
          description: Débito realizado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Débito realizado com sucesso'
                  transactionId:
                    type: string
                    example: 'trans123abc'
                  totalValue:
                    type: number
                    example: 27.50
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        productId:
                          type: string
                          example: "abc123def456"
                        productName:
                          type: string
                          example: "Refrigerante"
                        priceAtSale:
                          type: number
                          example: 5.0
                        quantity:
                          type: number
                          example: 2
                        subtotal:
                          type: number
                          example: 10.0

  /wallet/{code}/transfer:
    post:
      tags:
        - Wallet
      summary: Transferir saldo entre carteiras
      parameters:
        - in: path
          name: code
          schema:
            type: number
          required: true
          description: Código da carteira origem
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                toCode:
                  type: number
                  example: 67890
                value:
                  type: number
                  example: 25.00
              required:
                - toCode
                - value
      responses:
        '202':
          description: Transferência realizada com sucesso

  /wallet/{code}/cancel-transaction:
    post:
      tags:
        - Wallet
      summary: Cancelar uma transação específica
      parameters:
        - in: path
          name: code
          schema:
            type: number
          required: true
          description: Código da carteira
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                transactionId:
                  type: string
                  example: "trans123abc"
              required:
                - transactionId
      responses:
        '202':
          description: Transação cancelada com sucesso

  /wallet/{code}:
    get:
      tags:
        - Wallet
      summary: Obter informações da carteira pelo código
      parameters:
        - in: path
          name: code
          schema:
            type: number
          required: true
          description: Código da carteira
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  balance:
                    type: number
                    example: 250.75
                  user:
                    type: object
                    properties:
                      name:
                        type: string
                        example: 'João Silva'
                      phone:
                        type: string
                        example: '(11) 99999-9999'
                  transactions:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "trans123abc"
                        value:
                          type: number
                          example: 100.50
                        type:
                          type: string
                          enum: [credit, debit, transfer]
                          example: 'credit'
                        date:
                          type: string
                          format: date-time
                          example: '2025-01-28T12:00:00Z'
                        hasProducts:
                          type: boolean
                          example: true
                        itemsCount:
                          type: number
                          example: 3
        '404':
          description: Não encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Carteira não encontrada'
    delete:
      tags:
        - Wallet
      summary: Remover uma carteira
      parameters:
        - in: path
          name: code
          schema:
            type: number
          required: true
          description: Código da carteira
      responses:
        '204':
          description: Carteira removida com sucesso

  # === LOTTERY ROUTES ===
  /wallet/lottery/draw:
    post:
      tags:
        - Lottery
      summary: Realizar sorteio da loteria
      description: |
        Realiza um sorteio entre todas as carteiras elegíveis. 
        Cada valor especificado em valorPorEntrada equivale a 1 entrada no sorteio.
        Apenas carteiras com alreadyWinner != true participam.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                valorPorEntrada:
                  type: number
                  example: 50
                  description: Valor em reais que equivale a 1 entrada no sorteio
              required:
                - valorPorEntrada
      responses:
        '200':
          description: Sorteio realizado com sucesso
          content:
            application/json:
              schema:
                type: object
                nullable: true
                description: Retorna o vencedor sorteado ou null se não há participantes elegíveis
                properties:
                  walletId:
                    type: string
                    example: "wallet123abc"
                  code:
                    type: number
                    example: 12345
                  balance:
                    type: number
                    example: 150.75
                  totalCredit:
                    type: number
                    example: 200.00
                  entries:
                    type: number
                    example: 4
                    description: Número de entradas no sorteio
                  user:
                    type: object
                    properties:
                      name:
                        type: string
                        example: "João Silva"
                      phone:
                        type: string
                        example: "(11) 99999-9999"
                  lotteryInfo:
                    type: object
                    properties:
                      totalEntries:
                        type: number
                        example: 25
                        description: Total de entradas no sorteio
                      totalParticipants:
                        type: number
                        example: 8
                        description: Número de participantes únicos
                      valorPorEntrada:
                        type: number
                        example: 50
                      drawnAt:
                        type: string
                        format: date-time
                        example: "2025-01-28T15:30:00Z"
                      winnerChance:
                        type: string
                        example: "16.00%"
                        description: Porcentagem de chance que o vencedor tinha

  /wallet/{code}/mark-winner:
    post:
      tags:
        - Lottery
      summary: Marcar carteira como vencedora
      description: |
        Marca uma carteira como vencedora após confirmação de presença.
        Carteiras marcadas como vencedoras ficam inelegíveis para futuros sorteios.
      parameters:
        - in: path
          name: code
          schema:
            type: number
          required: true
          description: Código da carteira vencedora
      responses:
        '200':
          description: Carteira marcada como vencedora com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Carteira marcada como vencedora com sucesso"
                  walletCode:
                    type: number
                    example: 12345
                  user:
                    type: object
                    properties:
                      name:
                        type: string
                        example: "João Silva"
                      phone:
                        type: string
                        example: "(11) 99999-9999"
                  markedAt:
                    type: string
                    format: date-time
                    example: "2025-01-28T15:30:00Z"
        '400':
          description: Erro - Carteira já foi premiada ou não encontrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Esta carteira já foi premiada anteriormente"

  # === PRODUCTS ROUTES ===
  /products:
    get:
      tags:
        - Products
      summary: Listar todos os produtos
      responses:
        '200':
          description: Lista de produtos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
    post:
      tags:
        - Products
      summary: Criar um novo produto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Refrigerante"
                category:
                  type: string
                  example: "Bebidas"
                currentPrice:
                  type: number
                  example: 5.0
              required:
                - name
                - category
                - currentPrice
      responses:
        '201':
          description: Produto criado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Produto criado com sucesso'
                  productId:
                    type: string
                    example: "abc123def456"

  /products/active:
    get:
      tags:
        - Products
      summary: Listar produtos ativos (disponíveis para venda)
      responses:
        '200':
          description: Lista de produtos ativos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'

  /products/{id}:
    get:
      tags:
        - Products
      summary: Obter produto específico
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID do produto
      responses:
        '200':
          description: Produto encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Produto não encontrado

    patch:
      tags:
        - Products
      summary: Atualizar produto
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID do produto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Refrigerante Premium"
                category:
                  type: string
                  example: "Bebidas"
                currentPrice:
                  type: number
                  example: 7.0
      responses:
        '200':
          description: Produto atualizado com sucesso

    delete:
      tags:
        - Products
      summary: Remover produto (soft delete)
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID do produto
      responses:
        '200':
          description: Produto removido com sucesso

  /products/{id}/activate:
    post:
      tags:
        - Products
      summary: Ativar produto
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID do produto
      responses:
        '200':
          description: Produto ativado com sucesso

  # === REPORTS ROUTES ===
  /reports/sales-today:
    get:
      tags:
        - Reports
      summary: Relatório de vendas do dia atual
      responses:
        '200':
          description: Relatório de vendas de hoje
          content:
            application/json:
              schema:
                type: object
                properties:
                  date:
                    type: string
                    example: "2025-01-28"
                  summary:
                    type: object
                    properties:
                      totalValue:
                        type: number
                        example: 450.75
                      totalItems:
                        type: number
                        example: 87
                      totalTransactions:
                        type: number
                        example: 23
                  products:
                    type: array
                    items:
                      type: object
                      properties:
                        productId:
                          type: string
                          example: "abc123def456"
                        productName:
                          type: string
                          example: "Refrigerante"
                        totalQuantity:
                          type: number
                          example: 45
                        totalValue:
                          type: number
                          example: 225.0

  /reports/sales-by-product/{productId}:
    get:
      tags:
        - Reports
      summary: Histórico de vendas por produto específico
      parameters:
        - in: path
          name: productId
          schema:
            type: string
          required: true
          description: ID do produto
      responses:
        '200':
          description: Histórico de vendas do produto
          content:
            application/json:
              schema:
                type: object
                properties:
                  productId:
                    type: string
                    example: "abc123def456"
                  productName:
                    type: string
                    example: "Refrigerante"
                  summary:
                    type: object
                    properties:
                      totalQuantity:
                        type: number
                        example: 150
                      totalValue:
                        type: number
                        example: 750.0
                      salesCount:
                        type: number
                        example: 45
                  sales:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProductSale'

  /reports/sales-by-period:
    get:
      tags:
        - Reports
      summary: Relatório de vendas por período
      parameters:
        - in: query
          name: startDate
          schema:
            type: string
            format: date
          required: true
          description: Data inicial (YYYY-MM-DD)
          example: "2025-01-01"
        - in: query
          name: endDate
          schema:
            type: string
            format: date
          required: true
          description: Data final (YYYY-MM-DD)
          example: "2025-01-31"
      responses:
        '200':
          description: Relatório de vendas por período
          content:
            application/json:
              schema:
                type: object
                properties:
                  period:
                    type: object
                    properties:
                      startDate:
                        type: string
                        example: "2025-01-01"
                      endDate:
                        type: string
                        example: "2025-01-31"
                  summary:
                    type: object
                    properties:
                      totalValue:
                        type: number
                        example: 5450.75
                      totalQuantity:
                        type: number
                        example: 987
                      totalSales:
                        type: number
                        example: 234
                      daysWithSales:
                        type: number
                        example: 28

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: string
          example: "abc123def456"
        name:
          type: string
          example: "Refrigerante"
        category:
          type: string
          example: "Bebidas"
        currentPrice:
          type: number
          example: 5.0
        isActive:
          type: boolean
          example: true
        createdAt:
          type: string
          format: date-time
          example: "2025-01-28T10:00:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-01-28T10:00:00Z"

    ProductSale:
      type: object
      properties:
        id:
          type: string
          example: "sale123abc"
        transactionId:
          type: string
          example: "trans123abc"
        productId:
          type: string
          example: "abc123def456"
        productName:
          type: string
          example: "Refrigerante"
        priceAtSale:
          type: number
          example: 5.0
        quantity:
          type: number
          example: 2
        subtotal:
          type: number
          example: 10.0
        soldAt:
          type: string
          format: date-time
          example: "2025-01-28T15:30:00Z"

tags:
  - name: Wallet
    description: Operações de carteira digital
  - name: Products
    description: Gerenciamento de produtos
  - name: Reports
    description: Relatórios de vendas
